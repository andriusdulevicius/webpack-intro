Instaliuojam webpack : 
npm install --save-dev webpack webpack-cli (command line interface)

paruosimas produkcijai(sugeneruojam optimalius failus, sujungiam i viena ir pap.)
paleidziam webpack:
npx webpack --mode production

sukompiliavimas kurimui - (development mode)
npx webpack --mode development
juos galime susikelti i package.json failo scriptus 

pasidarom scriptus dev build ir start

norim idiegti html plugin
npm install --save-dev html-webpack-plugin

const HtmlWebpackPlugin = require('html-webpack-plugin');
const path = require('path');   --sitas eilutes nusikopijuojam is dokumentacijos webpack internetiniame puslapyje ir idedam i sukurta faila webpack.config.js

suinstaliuojam stiliaus packus:
npm install --save-dev css-loader style-loader
isirasius pluginus , webpack config faile ties moduleexports irasome papildoma info:
module: {
        rules: [
            {
                test: /\.css$/i,
                use: ['style-loader', 'css-loader'],
            }
        ],
    },

kad viska kas baigiasi su .css visiem failam pritaikome tuos du parsiustus loaderius.

Susiinstaliuojam babelio packus:

npm install --save-dev babel-loader @babel/core @babel/preset-env

pridedam naujas rules i webpack config faila:

{
              test: /\.js$/,
              exclude: /node_modules/, //taspats ieskosim js failu, isskyrus(exlude) node_modules faile
              use: {
                loader: 'babel-loader',
                options: {
                  presets: ['@babel/preset-env'] //kiek daug atgal i praeiti mes norim sugrizti(kad veiktu ant senu narsykliu)
                }
              }
            }

is naujo paleidziam npm run dev/build